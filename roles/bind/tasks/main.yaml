- name: Install bind9
  apt:
    name: bind9
    state: present

- name: Install dnspython
  ansible.builtin.apt:
    name: python3-dnspython
    state: present

- template:
    dest: /etc/bind/named.conf.{{ item }}
    src: bind.{{ item }}.j2
  loop:
    - options
    - local
  notify: restart bind

- template:
    dest: "/var/cache/bind/db.{{ mydomain }}"
    src: db.yotto.ttu.j2
    force: no
  no_log: true
  notify:
    - restart bind
    - reload rndc
  when: inventory_hostname in groups['dns_masters']

- template:
    dest: "/var/cache/bind/db.rev"
    src: db.rev.j2
  no_log: true
  notify:
    - restart bind
  when: inventory_hostname in groups['dns_masters']

- name: Flush
  meta: flush_handlers

- name: Enable bind9
  service:
    name: bind9
    state: started
    enabled: true

- name: Extract Bind9 exporter
  ansible.builtin.unarchive:
    src: "https://github.com/prometheus-community/bind_exporter/releases/download/v0.6.1/bind_exporter-0.6.1.linux-amd64.tar.gz"
    dest: "/opt/"
    remote_src: yes

- name: Create symlink for Bind9 exporter executable
  file:
    src: /opt/bind_exporter-0.6.1.linux-amd64/bind_exporter
    dest: /usr/local/bin/prometheus-bind-exporter
    state: link

- name: Create systemd service for Bind9 exporter
  copy:
    dest: /etc/systemd/system/prometheus-bind-exporter.service
    content: |
      [Unit]
      Description=Prometheus Bind9 Exporter
      After=network.target

      [Service]
      Type=simple
      ExecStart=/usr/local/bin/prometheus-bind-exporter
      Restart=always

      [Install]
      WantedBy=multi-user.target


- name: Reload systemd
  systemd:
    daemon_reload: yes

- name: Start and enable Bind9 exporter service
  systemd:
    name: prometheus-bind-exporter
    state: started
    enabled: true

- name: Add A records
  nsupdate:
    key_name: "dns_update_key"
    key_algorithm: "hmac-sha256"
    key_secret: "{{ dns_update_key }}"
    server: "127.0.0.1"
    zone: "{{ mydomain }}."
    record: "{{ item.key }}"
    type: "A"
    value: "{{ item.value }}"
  loop: "{{ dns_a_records | dict2items }}"
  run_once: True
  when: inventory_hostname in groups['dns_masters']
  notify: reload rndc

- name: Add CNAME records for services
  nsupdate:
    key_name: "dns_update_key"
    key_algorithm: "hmac-sha256"
    key_secret: "{{ dns_update_key }}"
    server: "127.0.0.1"
    zone: "{{ mydomain }}."
    record: "{{ item.key }}"
    type: "CNAME"
    value: "{{ item.value }}"
  loop: "{{ nameserver_records | dict2items }}"
  run_once: True
  delegate_to: "{{ groups['dns_masters'][0]Â }}"
  notify: reload rndc

