- name: Install MySQL server
  apt:
    name: mysql-server
    state: present
    update_cache: yes

- name: Ensure MySQL service is started and enabled
  service:
    name: mysql
    state: started
    enabled: yes

#- name: Notify MySQL restart
#  debug:
#    msg: "Restarting MySQL to apply configuration changes"
#  notify: Restart MySQL

- name: MySQL override.cnf
  template:
    src: override.cnf.j2
    dest: /etc/mysql/mysql.conf.d/override.cnf
  notify: Restart MySQL

- name: Install Python MySQL library
  apt:
    name: python3-pymysql
    state: present
    update_cache: yes

- name: MySQL database
  community.mysql.mysql_db:
    name: "{{ mysql_database }}"
    login_unix_socket: /var/run/mysqld/mysqld.sock

- name: MySQL user
  community.mysql.mysql_user:
    name: "{{ mysql_user }}"
    password: "{{ mysql_password }}"
    host: "%"
    priv: "{{ mysql_database }}.*:ALL"
    login_unix_socket: /var/run/mysqld/mysqld.sock
  no_log: true

- name: Cnf files for exporter
  template:
    dest: /var/lib/prometheus/.my.cnf
    src: my.cnf.j2
  no_log: true

- name: MYSQL exporter
  apt:
    name: prometheus-mysqld-exporter
    state: present

- name: Create MySQL user for the exporter
  community.mysql.mysql_user:
    name: "{{ mysql_exporter_username }}"
    password: "{{ mysql_exporter_password }}"
    priv: "*.*:PROCESS,REPLICATION CLIENT"
    host: "%"
    login_unix_socket: /var/run/mysqld/mysqld.sock
  no_log: true

- name: Ensure Prometheus MYSQL Exporter is started and enabled
  ansible.builtin.systemd:
    name: prometheus-mysqld-exporter
    state: started
    enabled: true

- name: Ensure /home/backup/mysql directory exists
  ansible.builtin.file:
    path: /home/backup/mysql
    state: directory
    owner: backup
    group: backup
    mode: '0755'

- name: Create backup MySQL user and grant privileges
  ansible.builtin.mysql_user:
    name: backup
    host: localhost
    password: "{{ backup_mysql_password }}"
    priv: "agama.*:SELECT,LOCK TABLES"
    state: present
    login_unix_socket: /var/run/mysqld/mysqld.sock
  no_log: true

- name: Create .my.cnf for backup user
  ansible.builtin.template:
    src: "backup_my.cnf.j2"
    dest: "/home/backup/.my.cnf"
    owner: backup
    group: backup
    mode: '0600'
  no_log: true

- name: Ensure /etc/cron.d/mysql-backup is created
  ansible.builtin.template:
    src: mysql_backup.j2
    dest: /etc/cron.d/mysql-backup
    owner: root
    group: root
    mode: '0644'
  notify: restart cron

- name: start cron
  service:
    name: cron
    state: started
    enabled: true

